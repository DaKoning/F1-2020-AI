DONE reward functie maken 
DONE future state voorspellen
DONE resemblance_state bepalen #hierbij neemt hij degene die het dichstbij ligt en neemt daarbij de q-waarde van de volgende staat
DONE Q_new bepalen
DONE epsilon implementeren
DONE actions bepalen
    DONE actie laten uitvoeren op basis van zijn q-value
DONE state in Q-table vervangen als het precies hetzelfde is
DONE determine termination aan de hand van tijd of botsing

game input maken
frequentie van programma verhogen (betere processor kopen)(oh nee wacht we zijn skere)
    multiprocessing
    gpu acceleration (gaat nie lukken man kogel gay, maar echt wtf)
    meerdere computers koppelen (wtf denken we)
    DONE epsilon opslaan in memory in plaats van returnen via main.py
    q_table, progress_old tijdelijk opslaan als public variable (dan wordt ie gewoon opgeslagen in een allocated ram space)
Deep Q network die betere beslissingen kan maken


speed in m/s, zodat punishment duidelijker kan worden bepaald

TO DO:
    multiprocessing fixen
    punishment alleen op basis van invalid
    (misschien) pygame in main
    